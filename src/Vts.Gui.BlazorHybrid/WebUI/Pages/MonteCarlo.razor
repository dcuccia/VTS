@page "/"
@page "/montecarlo"

@using Vts.MonteCarlo
@using Vts.MonteCarlo.Detectors

<h1>Counter</h1>
<p>N:</p>
<input @bind-value="@_input.N" />
<button class="btn btn-primary" @onclick="@(async _ => await RunSimulation(_input))">Run simulation!</button>
@*<MBLinearProgress></MBLinearProgress>*@
@if (!string.IsNullOrWhiteSpace(_progress))
{
    <p>Progress: @_progress</p>
}
@if (_mc?.Results?.Rd != null)
{
    <p>Output: @_mc.Results.Rd</p>
}

@code {
    SimulationInput _input;
    MonteCarloSimulation _mc;
    string _progress;

    protected override void OnInitialized()
    {
        _input = new SimulationInput { DetectorInputs = new[] { new RDiffuseDetectorInput() } };
    }

    async Task RunSimulation(SimulationInput input)
    {
        var progress = new Progress<(int index, double percentage)>(p => 
        { 
            _progress = $"{p.index}: {p.percentage} percent done!"; 
            StateHasChanged();
        });
        _mc = new MonteCarloSimulation(input) { ProgressPercentageDone = progress };
        await Task.Run(_mc.Run);
    }
}